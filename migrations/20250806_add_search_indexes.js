/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –º–∞–Ω–≥–∏
 * –°–æ–∑–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 */

export const up = async (knex) => {
  console.log('üîç –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞...');

  // 1. –°–æ–∑–¥–∞–µ–º GIN –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–Ω–∏–≥–∏
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_name_gin 
    ON book USING gin(to_tsvector('russian', name))
  `);

  // 2. –°–æ–∑–¥–∞–µ–º GIN –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–º—É –Ω–∞–∑–≤–∞–Ω–∏—é
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_alt_name_gin 
    ON book USING gin(to_tsvector('russian', COALESCE(alt_name, '')))
  `);

  // 3. –°–æ–∑–¥–∞–µ–º GIN –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_description_gin 
    ON book USING gin(to_tsvector('russian', COALESCE(description, '')))
  `);

  // 4. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_author_name_gin 
    ON author USING gin(to_tsvector('russian', name))
  `);

  // 5. –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å—É –∏ —Ç–∏–ø—É
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_status_type 
    ON book (status, type)
  `);

  // 6. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_updated_at 
    ON book (updated_at DESC)
  `);

  // 7. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_rate 
    ON book (rate DESC) WHERE rate IS NOT NULL
  `);

  // 8. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≥–æ–¥—É
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_year 
    ON book (year) WHERE year IS NOT NULL
  `);

  // 9. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–≤—è–∑–∏ –∫–Ω–∏–≥–∞-–∞–≤—Ç–æ—Ä (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_author_id 
    ON book (author_id)
  `);

  // 10. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–≤—è–∑–∏ –∫–Ω–∏–≥–∞-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_translator_id 
    ON book (translator_id)
  `);

  // 11. –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è case-insensitive –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_book_name_lower 
    ON book (LOWER(name))
  `);

  // 12. –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è case-insensitive –ø–æ–∏—Å–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞
  await knex.raw(`
    CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_author_name_lower 
    ON author (LOWER(name))
  `);

  console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
};

export const down = async (knex) => {
  console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –ø–æ–∏—Å–∫–∞...');

  // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
  const indexes = [
    'idx_book_name_gin',
    'idx_book_alt_name_gin', 
    'idx_book_description_gin',
    'idx_author_name_gin',
    'idx_book_status_type',
    'idx_book_updated_at',
    'idx_book_rate',
    'idx_book_year',
    'idx_book_author_id',
    'idx_book_translator_id',
    'idx_book_name_lower',
    'idx_author_name_lower'
  ];

  for (const index of indexes) {
    await knex.raw(`DROP INDEX CONCURRENTLY IF EXISTS ${index}`);
  }

  console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã –ø–æ–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω—ã');
};
