/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è FULLTEXT –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ PostgreSQL
 * –£–¥–∞–ª—è–µ—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ FULLTEXT –∏–Ω–¥–µ–∫—Å—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—ã—á–Ω—ã–µ B-tree –∏–Ω–¥–µ–∫—Å—ã
 */

export const up = async (knex) => {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ FULLTEXT –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è PostgreSQL...');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –∏–Ω–¥–µ–∫—Å—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –∏ —É–¥–∞–ª—è–µ–º FULLTEXT –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    
    // 1. –î–ª—è —Ç–∞–±–ª–∏—Ü—ã author
    await knex.raw(`
      DROP INDEX IF EXISTS author_name_index;
    `);
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π B-tree –∏–Ω–¥–µ–∫—Å –¥–ª—è –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    await knex.raw(`
      CREATE INDEX IF NOT EXISTS idx_author_name_btree
      ON author (name);
    `);

    // 2. –î–ª—è —Ç–∞–±–ª–∏—Ü—ã book
    await knex.raw(`
      DROP INDEX IF EXISTS book_name_index;
      DROP INDEX IF EXISTS book_alt_name_index;
      DROP INDEX IF EXISTS book_description_index;
    `);
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–µ B-tree –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –∫–Ω–∏–≥ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
    await knex.raw(`
      CREATE INDEX IF NOT EXISTS idx_book_name_btree
      ON book (name);
    `);
    
    await knex.raw(`
      CREATE INDEX IF NOT EXISTS idx_book_alt_name_btree
      ON book (alt_name) WHERE alt_name IS NOT NULL;
    `);

    // 3. –î–ª—è —Ç–∞–±–ª–∏—Ü—ã team
    await knex.raw(`
      DROP INDEX IF EXISTS team_name_index;
    `);
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π B-tree –∏–Ω–¥–µ–∫—Å –¥–ª—è –∏–º–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—ã (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    await knex.raw(`
      CREATE INDEX IF NOT EXISTS idx_team_name_btree
      ON team (name);
    `);

    console.log('‚úÖ FULLTEXT –∏–Ω–¥–µ–∫—Å—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    console.log('‚ÑπÔ∏è  –î–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ GIN –∏–Ω–¥–µ–∫—Å—ã –∏–∑ –º–∏–≥—Ä–∞—Ü–∏–∏ 20250806_add_search_indexes.js');
    
  } catch (error) {
    console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–Ω–¥–µ–∫—Å—ã –º–æ–≥–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ');
    console.log('‚úÖ –û–±—ã—á–Ω—ã–µ B-tree –∏–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã');
  }
};

export const down = async (knex) => {
  console.log('üîÑ –û—Ç–∫–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è FULLTEXT –∏–Ω–¥–µ–∫—Å–æ–≤...');

  // –£–¥–∞–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ B-tree –∏–Ω–¥–µ–∫—Å—ã
  const indexes = [
    'idx_author_name_btree',
    'idx_book_name_btree', 
    'idx_book_alt_name_btree',
    'idx_team_name_btree'
  ];

  for (const index of indexes) {
    await knex.raw(`DROP INDEX IF EXISTS ${index}`);
  }

  console.log('‚úÖ B-tree –∏–Ω–¥–µ–∫—Å—ã —É–¥–∞–ª–µ–Ω—ã');
  console.log('‚ö†Ô∏è  FULLTEXT –∏–Ω–¥–µ–∫—Å—ã –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è (–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ PostgreSQL)');
};
