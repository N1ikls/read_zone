import knex from 'knex';
import config from '../knex.js';

const db = knex(config);

async function runAllSeeds() {
  try {
    console.log('üå± –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º seeds –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    const seedFiles = [
      { file: '001_refs.js', name: '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ (—Ñ–∞–Ω–¥–æ–º—ã, –∂–∞–Ω—Ä—ã, —Ç–µ–≥–∏)' },
      { file: '002_user.js', name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏' },
      { file: '003_misc.js', name: '–†–∞–∑–Ω–æ–µ (FAQ, –Ω–æ–≤–æ—Å—Ç–∏)' },
      { file: '004_author.js', name: '–ê–≤—Ç–æ—Ä—ã' },
      { file: '005_book.js', name: '–ö–Ω–∏–≥–∏' },
      { file: '006_team.js', name: '–ö–æ–º–∞–Ω–¥—ã' }
    ];
    
    for (const seedInfo of seedFiles) {
      try {
        console.log(`üìù –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: ${seedInfo.name}...`);
        
        const { seed } = await import(`../seeds/${seedInfo.file}`);
        await seed(db);
        
        console.log(`‚úÖ ${seedInfo.name} - –≤—ã–ø–æ–ª–Ω–µ–Ω–æ`);
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${seedInfo.file}:`, error.message);
        
        // –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö seeds –æ—à–∏–±–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥—É–±–ª–∏–∫–∞—Ç—ã)
        if (error.message.includes('duplicate') || error.message.includes('—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')) {
          console.log(`‚ö†Ô∏è  ${seedInfo.name} - –ø—Ä–æ–ø—É—â–µ–Ω–æ (–¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)`);
        } else {
          throw error; // –ö—Ä–∏—Ç–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞ - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        }
      }
    }
    
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏—Å—å
    const stats = await Promise.all([
      db('fandom').count('* as count').first(),
      db('genre').count('* as count').first(),
      db('tag').count('* as count').first(),
      db('user').count('* as count').first(),
      db('author').count('* as count').first(),
      db('book').count('* as count').first()
    ]);
    
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:');
    console.log(`- –§–∞–Ω–¥–æ–º—ã: ${stats[0].count}`);
    console.log(`- –ñ–∞–Ω—Ä—ã: ${stats[1].count}`);
    console.log(`- –¢–µ–≥–∏: ${stats[2].count}`);
    console.log(`- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${stats[3].count}`);
    console.log(`- –ê–≤—Ç–æ—Ä—ã: ${stats[4].count}`);
    console.log(`- –ö–Ω–∏–≥–∏: ${stats[5].count}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∞
    const admin = await db('user').where('email', 'admin1@example.com').first();
    if (admin) {
      console.log(`üë§ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: ${admin.name} (${admin.email})`);
    }
    
    console.log('\nüéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
    console.error(error.message);
    
    if (error.stack) {
      console.error('\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:');
      console.error(error.stack);
    }
    
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã: npm run migration');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª manga_2.csv —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞');
    
    process.exit(1);
  } finally {
    await db.destroy();
  }
}

runAllSeeds();
