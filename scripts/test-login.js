import { db } from '../config/config.ts';
import bcrypt from 'bcrypt';

async function testLogin() {
  try {
    const email = 'admin1@example.com';
    const password = 'admin123';
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
    const users = await db('user')
      .where({ email })
      .select('*');
      
    if (!users.length) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const user = users[0];
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', user.name);
    console.log('üìß Email:', user.email);
    console.log('üîë –•–µ—à –≤ –ë–î:', user.password);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    const isValid = bcrypt.compareSync(password, user.password);
    console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è:', isValid ? '‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π' : '‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
    
    if (!isValid) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö–µ—à
      const newHash = bcrypt.hashSync(password, 10);
      console.log('\nüîß –ù–æ–≤—ã–π —Ö–µ—à –¥–ª—è –ø–∞—Ä–æ–ª—è "admin123":', newHash);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
      await db('user')
        .where('email', email)
        .update({ password: newHash });
        
      console.log('‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑
      const isValidNow = bcrypt.compareSync(password, newHash);
      console.log('üîê –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:', isValidNow ? '‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π' : '‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await db.destroy();
  }
}

testLogin();
