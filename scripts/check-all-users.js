import knex from 'knex';
import config from '../knex.js';
import bcrypt from 'bcrypt';

const db = knex(config);

async function checkAllUsers() {
  try {
    console.log('üë• –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await db('user')
      .select('id', 'email', 'name', 'role', 'password', 'created_at')
      .orderBy('role', 'desc')
      .orderBy('email', 'asc');
    
    console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª—è–º
    const admins = users.filter(user => user.role === 'admin');
    const moderators = users.filter(user => user.role === 'moderator');
    const regularUsers = users.filter(user => !user.role || user.role === '');
    
    console.log('üëë –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–´:');
    console.log('================');
    if (admins.length === 0) {
      console.log('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
    } else {
      for (const admin of admins) {
        console.log(`üìß Email: ${admin.email}`);
        console.log(`üë§ –ò–º—è: ${admin.name}`);
        console.log(`üîë –•–µ—à –ø–∞—Ä–æ–ª—è: ${admin.password}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
        const testPasswords = ['123456', 'admin123', 'admin', 'password'];
        let foundPassword = null;
        
        for (const testPassword of testPasswords) {
          if (bcrypt.compareSync(testPassword, admin.password)) {
            foundPassword = testPassword;
            break;
          }
        }
        
        if (foundPassword) {
          console.log(`‚úÖ –ü–∞—Ä–æ–ª—å: ${foundPassword}`);
        } else {
          console.log('‚ùì –ü–∞—Ä–æ–ª—å: –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω (–Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏)');
        }
        
        console.log(`üìÖ –°–æ–∑–¥–∞–Ω: ${admin.created_at}`);
        console.log('---');
      }
    }
    
    console.log('\nüõ°Ô∏è –ú–û–î–ï–†–ê–¢–û–†–´:');
    console.log('==============');
    if (moderators.length === 0) {
      console.log('‚ÑπÔ∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    } else {
      for (const moderator of moderators) {
        console.log(`üìß Email: ${moderator.email}`);
        console.log(`üë§ –ò–º—è: ${moderator.name}`);
        console.log(`üìÖ –°–æ–∑–¥–∞–Ω: ${moderator.created_at}`);
        console.log('---');
      }
    }
    
    console.log('\nüë§ –û–ë–´–ß–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò (–ø–µ—Ä–≤—ã–µ 10):');
    console.log('===================================');
    const firstUsers = regularUsers.slice(0, 10);
    
    for (const user of firstUsers) {
      console.log(`üìß Email: ${user.email}`);
      console.log(`üë§ –ò–º—è: ${user.name}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      if (bcrypt.compareSync('123456', user.password)) {
        console.log('‚úÖ –ü–∞—Ä–æ–ª—å: 123456');
      } else {
        console.log('‚ùì –ü–∞—Ä–æ–ª—å: –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω');
      }
      
      console.log(`üìÖ –°–æ–∑–¥–∞–Ω: ${user.created_at}`);
      console.log('---');
    }
    
    if (regularUsers.length > 10) {
      console.log(`\n... –∏ –µ—â–µ ${regularUsers.length - 10} –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    }
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log('==============');
    console.log(`üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: ${admins.length}`);
    console.log(`üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã: ${moderators.length}`);
    console.log(`üë§ –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${regularUsers.length}`);
    console.log(`üìä –í—Å–µ–≥–æ: ${users.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –û–°–ù–û–í–ù–û–ì–û –ê–î–ú–ò–ù–ê:');
    console.log('============================');
    const mainAdmin = await db('user').where('email', 'admin1@example.com').first();
    
    if (mainAdmin) {
      console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∞–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω:');
      console.log(`üìß Email: ${mainAdmin.email}`);
      console.log(`üë§ –ò–º—è: ${mainAdmin.name}`);
      console.log(`üîê –†–æ–ª—å: ${mainAdmin.role}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª–∏
      const passwords = ['admin123', '123456', 'admin', 'password'];
      let correctPassword = null;
      
      for (const pwd of passwords) {
        if (bcrypt.compareSync(pwd, mainAdmin.password)) {
          correctPassword = pwd;
          break;
        }
      }
      
      if (correctPassword) {
        console.log(`üîë –ü–∞—Ä–æ–ª—å: ${correctPassword}`);
        console.log('üåê –°—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞: http://localhost:3001/admin');
      } else {
        console.log('‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö');
      }
    } else {
      console.log('‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –∞–¥–º–∏–Ω (admin1@example.com) –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message);
  } finally {
    await db.destroy();
  }
}

checkAllUsers();
