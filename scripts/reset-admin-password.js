import { db } from '../config/config.ts';
import bcrypt from 'bcrypt';

async function resetAdminPassword() {
  try {
    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å "admin123"
    const password = 'admin123';
    const hashedPassword = await bcrypt.hash(password, 10);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è admin1@example.com
    const result = await db('user')
      .where('email', 'admin1@example.com')
      .update({ 
        password: hashedPassword,
        updated_at: new Date()
      });
    
    if (result > 0) {
      console.log('‚úÖ –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      console.log('üìß Email: admin1@example.com');
      console.log('üîë –ü–∞—Ä–æ–ª—å: admin123');
      console.log('\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:');
      console.log('üåê http://localhost:3001/admin');
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin1@example.com –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø–∞—Ä–æ–ª—è:', error);
  } finally {
    await db.destroy();
  }
}

resetAdminPassword();
