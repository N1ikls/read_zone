import fetch from 'node-fetch';

const API_BASE = 'http://localhost:3001/api';

async function testApiNotifications() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');

    // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫ admin2
    const loginResponse = await fetch(`${API_BASE}/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        login: 'admin2@example.com',
        password: '123456',
      }),
    });

    if (!loginResponse.ok) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    const cookies = loginResponse.headers.get('set-cookie');
    const user = await loginResponse.json();
    console.log(`üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${user.name} (${user.email})`);

    // –ü–æ–ª—É—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notificationsResponse = await fetch(`${API_BASE}/notifications`, {
      headers: {
        'Content-Type': 'application/json',
        'Cookie': cookies,
      },
    });

    if (!notificationsResponse.ok) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
      return;
    }

    const notificationsData = await notificationsResponse.json();
    console.log(
      `üìã –ù–∞–π–¥–µ–Ω–æ ${notificationsData.notifications.length} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`,
    );
    console.log(`üîî –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: ${notificationsData.unread_count}`);

    if (notificationsData.notifications.length > 0) {
      console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:');
      notificationsData.notifications.slice(0, 3).forEach((notif, index) => {
        const status = notif.is_read ? '‚úÖ' : 'üîî';
        console.log(`${index + 1}. ${status} [${notif.type}] ${notif.title}`);
        console.log(`   ${notif.message}`);
        if (notif.metadata) {
          console.log(`   –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${JSON.stringify(notif.metadata)}`);
        }
      });

      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–º–µ—Ç–∫—É –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
      const firstNotifId = notificationsData.notifications[0].id;
      const markReadResponse = await fetch(
        `${API_BASE}/notifications/mark-read`,
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Cookie': cookies,
          },
          body: JSON.stringify({
            notification_ids: [firstNotifId],
          }),
        },
      );

      if (markReadResponse.ok) {
        const markReadData = await markReadResponse.json();
        console.log(`\n‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ`);
        console.log(`üîî –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞–ª–æ—Å—å: ${markReadData.unread_count}`);
      }
    }

    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const settingsResponse = await fetch(`${API_BASE}/notifications/settings`, {
      headers: {
        'Content-Type': 'application/json',
        'Cookie': cookies,
      },
    });

    if (settingsResponse.ok) {
      const settingsData = await settingsResponse.json();
      console.log('\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:');
      console.log(
        `- –ù–æ–≤—ã–µ –∫–Ω–∏–≥–∏ –æ—Ç –∞–≤—Ç–æ—Ä–æ–≤: ${settingsData.settings.user_new_book_enabled ? '‚úÖ' : '‚ùå'}`,
      );
      console.log(
        `- –ù–æ–≤—ã–µ –≥–ª–∞–≤—ã –æ—Ç –∞–≤—Ç–æ—Ä–æ–≤: ${settingsData.settings.user_new_chapter_enabled ? '‚úÖ' : '‚ùå'}`,
      );
      console.log(
        `- –ù–æ–≤—ã–µ –≥–ª–∞–≤—ã –≤ –∑–∞–∫–ª–∞–¥–∫–∞—Ö: ${settingsData.settings.book_new_chapter_enabled ? '‚úÖ' : '‚ùå'}`,
      );
      console.log(
        `- –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${settingsData.settings.comment_reply_enabled ? '‚úÖ' : '‚ùå'}`,
      );
      console.log(
        `- Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${settingsData.settings.email_notifications_enabled ? '‚úÖ' : '‚ùå'}`,
      );
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const statsResponse = await fetch(`${API_BASE}/notifications/stats`, {
      headers: {
        'Content-Type': 'application/json',
        'Cookie': cookies,
      },
    });

    if (statsResponse.ok) {
      const statsData = await statsResponse.json();
      console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:');

      if (statsData.stats) {
        console.log(`- –í—Å–µ–≥–æ: ${statsData.stats.total || 0}`);
        console.log(`- –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: ${statsData.stats.unread || 0}`);

        if (statsData.stats.by_type && statsData.stats.by_type.length > 0) {
          console.log('- –ü–æ —Ç–∏–ø–∞–º:');
          statsData.stats.by_type.forEach((stat) => {
            console.log(
              `  ${stat.type}: ${stat.count} (–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: ${stat.unread_count || 0})`,
            );
          });
        }
      } else {
        console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const updateSettingsResponse = await fetch(
      `${API_BASE}/notifications/settings`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Cookie': cookies,
        },
        body: JSON.stringify({
          comment_liked_enabled: true,
          email_notifications_enabled: false,
        }),
      },
    );

    if (updateSettingsResponse.ok) {
      const updateData = await updateSettingsResponse.json();
      console.log('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      console.log(
        `- –õ–∞–π–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${updateData.settings.comment_liked_enabled ? '‚úÖ' : '‚ùå'}`,
      );
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error);
  }
}

testApiNotifications();
