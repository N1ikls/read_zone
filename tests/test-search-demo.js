// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –º–∞–Ω–≥–∏
import knexConfig from '../knex.js';
import knex from 'knex';
import BookStorage from '../server/storage/book.js';

async function demonstrateSearchImprovements() {
  console.log('üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –º–∞–Ω–≥–∏\n');

  const db = knex(knexConfig);
  const mangaStorage = new BookStorage(db);

  // –¢–µ—Å—Ç 1: –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  console.log('üìù –¢–µ—Å—Ç 1: –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞');
  console.log('‚îÄ'.repeat(50));

  const testCases = [
    '  –ù–∞—Ä—É—Ç–æ   –£–∑—É–º–∞–∫–∏  ',
    'ONE PIECE',
    '–ê—Ç–∞–∫–∞ –¢–∏—Ç–∞–Ω–æ–≤',
    '–¢–æ–∫–∏–π—Å–∫–∏–π –ì—É–ª—å',
    '',
    null,
  ];

  testCases.forEach((testCase) => {
    const normalized = mangaStorage.normalizeSearchTerm(testCase);
    console.log(`–ò—Å—Ö–æ–¥–Ω—ã–π: "${testCase}" ‚Üí –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π: "${normalized}"`);
  });

  console.log('\n');

  // –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π
  console.log('üéØ –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π');
  console.log('‚îÄ'.repeat(50));

  const searchQueries = ['–ù–∞—Ä—É—Ç–æ', 'One Piece', '–ê—Ç–∞–∫–∞ –¢–∏—Ç–∞–Ω–æ–≤', ''];

  searchQueries.forEach((query) => {
    const condition = mangaStorage.createSearchCondition(query);
    console.log(`\n–ó–∞–ø—Ä–æ—Å: "${query}"`);
    if (condition) {
      console.log('–£—Å–ª–æ–≤–∏–µ:', JSON.stringify(condition, null, 2));
    } else {
      console.log('–£—Å–ª–æ–≤–∏–µ: null (–ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å)');
    }
  });

  console.log('\n');

  // –¢–µ—Å—Ç 3: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
  console.log('‚ö° –¢–µ—Å—Ç 3: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
  console.log('‚îÄ'.repeat(50));

  const longQuery =
    '–æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Å–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ –º–∞–Ω–≥–∏';

  const start = Date.now();
  const condition = mangaStorage.createSearchCondition(longQuery);
  const end = Date.now();

  console.log(
    `–î–ª–∏–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å (${longQuery.length} —Å–∏–º–≤–æ–ª–æ–≤): ${end - start}–º—Å`,
  );
  console.log(`–°–æ–∑–¥–∞–Ω–æ —É—Å–ª–æ–≤–∏–π: ${condition[':or'].length}`);

  console.log('\n');

  // –¢–µ—Å—Ç 4: –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
  console.log('üî§ –¢–µ—Å—Ç 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤');
  console.log('‚îÄ'.repeat(50));

  const specialCases = [
    '–º–∞–Ω–≥–∞ "—Å –∫–∞–≤—ã—á–∫–∞–º–∏"',
    '—Å–∏–º–≤–æ–ª—ã %_*',
    '—á–∏—Å–ª–∞ 123 –∏ –±—É–∫–≤—ã',
    '–∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è: —Ç–æ—á–∫–∞, –∑–∞–ø—è—Ç–∞—è!',
  ];

  specialCases.forEach((testCase) => {
    const normalized = mangaStorage.normalizeSearchTerm(testCase);
    const condition = mangaStorage.createSearchCondition(testCase);
    console.log(`"${testCase}" ‚Üí "${normalized}"`);
    console.log(
      `  –£—Å–ª–æ–≤–∏–π —Å–æ–∑–¥–∞–Ω–æ: ${condition ? condition[':or'].length : 0}`,
    );
  });

  console.log('\n');

  // –¢–µ—Å—Ç 5: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∏ –Ω–æ–≤–æ–≥–æ –ø–æ–¥—Ö–æ–¥–æ–≤
  console.log('üìä –¢–µ—Å—Ç 5: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥–æ–≤');
  console.log('‚îÄ'.repeat(50));

  const comparisonCases = [
    'ONE PIECE',
    '  –Ω–∞—Ä—É—Ç–æ   —É–∑—É–º–∞–∫–∏  ',
    '–ê—Ç–∞–∫–∞ –¢–∏—Ç–∞–Ω–æ–≤',
    '—Ç–æ–∫–∏–π—Å–∫–∏–π –≥—É–ª—å',
  ];

  comparisonCases.forEach((testCase) => {
    console.log(`\n–ó–∞–ø—Ä–æ—Å: "${testCase}"`);

    // –°—Ç–∞—Ä—ã–π –ø–æ–¥—Ö–æ–¥
    const oldCondition = { name: { like: `%${testCase}%` } };
    console.log('  –°—Ç–∞—Ä—ã–π –ø–æ–¥—Ö–æ–¥:', JSON.stringify(oldCondition));

    // –ù–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥
    const newCondition = mangaStorage.createSearchCondition(testCase);
    console.log('  –ù–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥: –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –ø–æ–∏—Å–∫ —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π');
    console.log(
      `    - –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: "${mangaStorage.normalizeSearchTerm(testCase)}"`,
    );
    console.log(
      `    - –°—Ç—Ä–∞—Ç–µ–≥–∏–π –ø–æ–∏—Å–∫–∞: ${newCondition ? newCondition[':or'].length : 0}`,
    );
  });

  console.log('\n');
  console.log('‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\n–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞:');
  console.log('‚Ä¢ –ù–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É (ILIKE –≤–º–µ—Å—Ç–æ LIKE)');
  console.log('‚Ä¢ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¥–∏–∞–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–∫–æ–≤');
  console.log(
    '‚Ä¢ –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –ø–æ–∏—Å–∫ (—Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ + –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ + –ø–æ —Å–ª–æ–≤–∞–º)',
  );
  console.log('‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –º–∞–Ω–≥–∏ –≤–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
  console.log('‚Ä¢ –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å');

  await db.destroy();
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
demonstrateSearchImprovements().catch(console.error);
